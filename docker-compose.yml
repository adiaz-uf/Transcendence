---

services:
  backend:
    build: ./backend
    container_name: pong_backend
    restart: always
    env_file:
      - .env
    expose:
      - "${BACKEND_PORT}"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./backend/migrations:/app/migrations
    command: sh -c "/app/init.sh"
    networks:
      - transcendence_net

  frontend:
    build: ./frontend
    container_name: pong_frontend
    restart: always
    ports:
      - "${FRONTEND_PORT}:3000"
    stdin_open: true
    tty: true
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "serve -s build"
    networks:
      - transcendence_net

  db:
    image: postgres:17
    container_name: pong_db
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - transcendence_net

  pgadmin:
    build:
      context: ./pgadmin
      dockerfile: Dockerfile
    container_name: pong_pgadmin
    restart: always
    env_file:
      - .env
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - transcendence_net

  nginx:
    image: nginx:latest
    container_name: pong_nginx
    restart: always
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./certs:/etc/ssl/certs
    networks:
      - transcendence_net

volumes:
  pgdata:
  pgadmin_data:

networks:
  transcendence_net:
    driver: bridge
